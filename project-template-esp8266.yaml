# These substitutions allow the end user to override certain values
substitutions:
  name: "thermometer-hygrometer"

esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: neoe.thermometer-hygrometer
    version: "1.0"

esp8266:
  board: d1_mini

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://esphome/esphome-project-template/project-template-esp8266.yaml@main

wifi:
  # Set up a wifi access point using the device name above
  ap:
    password: "12345678"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:


##########################################################
# Most projects should not remove anything from above here
# and should just modify the name, project name/version 
# and git url for the dashboard_import
##########################################################


# Sets up the improv via serial client for Wi-Fi provisioning.
# Handy if your device has a usb port for the user to add credentials when they first get it.
improv_serial:

# NEOE specific additions
i2c:

sensor:
  - platform: hdc1080
    temperature:
      id: temperature
      name: "Temperatur"
      accuracy_decimals: 1
      filters:
      - sliding_window_moving_average:
        window_size: 60
        send_every: 60
    humidity:
      id: humidity
      name: "Luftfeuchtigkeit"
      accuracy_decimals: 1
      filters:
      - sliding_window_moving_average:
        window_size: 60
        send_every: 60
    update_interval: 1s

font:
  - file: 'OpenSans-Regular.ttf'
    id: font1
    size: 12
  - file: 'OpenSans-Regular.ttf'
    id: font2
    size: 36

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    lambda: |-
      if (id(temperature).has_state()) {
        it.printf(64, 0, id(font2), TextAlign::TOP_CENTER, "%.1f Â°C", id(temperature).state);
      }
      if (id(humidity).has_state()) {
        it.printf(64, 64, id(font1), TextAlign::BOTTOM_CENTER, "Luftfeuchtigkeit: %.0f %%", id(humidity).state);
      }
